volumes:
  goodfood-data:
  goodfood-docs:
  foodImages:

networks:
  goodfood-network:
    driver: bridge

services:
  db:
    container_name: 'goodfood_db'
    image: postgres:16
    hostname: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 6859
      POSTGRES_DB: goodfood_db_pub
    networks:
      - goodfood-network
    volumes:
      - goodfood-data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d goodfood_db_pub"]
      interval: 30s
      timeout: 10s
      retries: 5

  webapp:
    container_name: 'goodfood_web'
    environment:
      ASPNETCORE_ENVIRONMENT: "Staging"
    build: 
      context: .
      target: final
    ports:
      - "8090:8080"
    networks:
      - goodfood-network
    volumes:
      - goodfood-docs:/var/lib/mydocs
      - foodImages:/app/Files/FoodImages
    depends_on:
      db:
        condition: service_healthy

  migrations:
    container_name: 'goodfood_migrations'
    environment:
      ASPNETCORE_ENVIRONMENT: "Docker"
    build:
      context: .
      target: migrations
    networks:
      - goodfood-network
    depends_on:
      db:
        condition: service_healthy
    profiles:
      - migrations

  emailworker:
    container_name: 'goodfood_emailworker'
    environment:
      ASPNETCORE_ENVIRONMENT: "Staging"
    build:
      context: .
      dockerfile: Dockerfile.EmailWorker
    networks:
      - goodfood-network
    restart: unless-stopped
    depends_on:
      - webapp